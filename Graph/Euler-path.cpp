//Euler-path
/*
无向欧拉回路:当且仅当无向图连通且并且每个点的度数为偶数
无向欧拉通路:当且仅当无向图连通并且图中恰好有两个节点的度数为奇数其他为偶数
有向欧拉回路:当且仅当每个点的入度等于出度
有向欧拉通路:当且仅当有两个点的入度不等于出度且其中一个差为1另一个差为-1
混合图欧拉 先给每条无向边随机定向(原方向)计算每个点的出度入度
如果有点abs(出度-入度)为奇数则无解 再搞成二分图
如果一个点出度>入度 则与源点连(出度-入度)/2容量的边
如果一个点入度>出度 则与汇点连(入度-出度)/2容量的边
每一条无向边定的方向u到v点连一条容量为1的边
跑最大流 如果为满流则有解
*/
//欧拉回路非递归:
int top, t;
int sta[maxn], ans[maxn]; //系统栈 答案栈
bool vis[maxn];
void euler(int JQK) {
        sta[++top] = JQK;
        while (top > 0) {
                int x = sta[top], i = Head[x];
                while (i && vis[i]) {
                        i = nxt[i];        //找到一条尚未访问的边
                }
                if (i) { //沿着这条边模拟递归过程,标记该边,并更新表头
                        sta[++top] = to[i];
                        vis[i] = vis[i ^ 1] = true;
                        Head[x] = nxt[i];
                } else { //x相连的所有边都已经访问,模拟回溯过程并记在答案栈中
                        top--;
                        ans[++t] = x;  //答案栈要倒叙输出
                }
        }
}
